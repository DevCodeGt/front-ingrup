import { OnDestroy } from '@angular/core';
import { AbstractObject3D } from './abstract-object-3d';
import * as THREE from 'three';
export declare abstract class AbstractLazyObject3D extends AbstractObject3D<THREE.Object3D> implements OnDestroy {
    /**
     * Flag to signal whether the parent class instance AbstractObject3D called the
     * overwritten method {@link AbstractModelLoader#afterInit} yet.
     *
     * Unless that method was called, no methods and properties of {@link AbstractObject3D}
     * may be safely accessed, especially {@link AbstractObject3D#addChild} and
     * {@link AbstractObject3D.renderer}.
     */
    private parentInitialized;
    /**
     * This is reference to lazy loaded Object3D (async after init)
     */
    protected lazyObject: THREE.Object3D | undefined;
    /**
     * Abstract method for lazy loading
     *
     */
    protected abstract loadLazyObject(): Promise<THREE.Object3D>;
    protected afterInit(): void;
    protected startLoading(): void;
    ngOnDestroy(): void;
    protected newObject3DInstance(): THREE.Object3D;
}
