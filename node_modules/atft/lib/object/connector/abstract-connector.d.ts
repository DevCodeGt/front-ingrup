import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
export declare abstract class AbstractConnector<T extends THREE.Object3D> extends AbstractObject3D<T> {
    source: AbstractObject3D<THREE.Object3D>;
    target: AbstractObject3D<THREE.Object3D>;
    protected newObject3DInstance(): T;
    private watchObjects;
    protected getLineGeometry(): THREE.Geometry;
    /**
     * Create line mesh
     */
    abstract createConnectorObject(): T;
    /**
     * If at least one line end (source or target object)  changed, then line geoetry should be updated as well
     * // TODO: Calculate only when source/target positions were changed
     */
    abstract updateLineGeometry(): void;
}
