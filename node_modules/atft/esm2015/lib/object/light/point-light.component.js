/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
import { appliedColor } from '../../util';
import { RendererService } from '../../renderer/renderer.service';
export class PointLightComponent extends AbstractObject3D {
    /**
     * @param {?} rendererService
     */
    constructor(rendererService) {
        super(rendererService);
        this.rendererService = rendererService;
        this.color = 0xffffff;
        this.intensity = 1;
        this.distance = 500;
        this.castShadow = false;
    }
    /**
     * @protected
     * @return {?}
     */
    newObject3DInstance() {
        /** @type {?} */
        const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);
        if (this.castShadow === true) {
            light.castShadow = this.castShadow;
            // TODO: props
            light.shadow.mapSize.width = 1024;
            light.shadow.mapSize.height = 1024;
            light.shadow.camera.near = 0.5;
            light.shadow.camera.far = 500;
            light.shadow.bias = -0.001;
            light.shadow.radius = 1;
        }
        return light;
    }
}
PointLightComponent.decorators = [
    { type: Component, args: [{
                selector: 'atft-point-light',
                providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => PointLightComponent)) }],
                template: '<ng-content></ng-content>'
            }] }
];
/** @nocollapse */
PointLightComponent.ctorParameters = () => [
    { type: RendererService }
];
PointLightComponent.propDecorators = {
    color: [{ type: Input }],
    intensity: [{ type: Input }],
    distance: [{ type: Input }],
    castShadow: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PointLightComponent.prototype.color;
    /** @type {?} */
    PointLightComponent.prototype.intensity;
    /** @type {?} */
    PointLightComponent.prototype.distance;
    /** @type {?} */
    PointLightComponent.prototype.castShadow;
    /**
     * @type {?}
     * @protected
     */
    PointLightComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9pbnQtbGlnaHQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvbGlnaHQvcG9pbnQtbGlnaHQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLFlBQVksQ0FBQztBQUN4QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFPaEUsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGdCQUFrQzs7OztJQU96RSxZQUNZLGVBQWdDO1FBRTFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUZiLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQU5uQyxVQUFLLEdBQUcsUUFBUSxDQUFDO1FBQ2pCLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFDZCxhQUFRLEdBQUcsR0FBRyxDQUFDO1FBQ2YsZUFBVSxHQUFHLEtBQUssQ0FBQztJQU01QixDQUFDOzs7OztJQUVTLG1CQUFtQjs7Y0FDckIsS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUUzRixJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO1lBQzVCLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUNuQyxjQUFjO1lBQ2QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztZQUNsQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ25DLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7WUFDL0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztZQUM5QixLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQztZQUMzQixLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDekI7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLFVBQVU7Ozt3QkFBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBbUIsRUFBQyxFQUFDLENBQUM7Z0JBQzVGLFFBQVEsRUFBRSwyQkFBMkI7YUFDdEM7Ozs7WUFOTyxlQUFlOzs7b0JBU3BCLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFITixvQ0FBMEI7O0lBQzFCLHdDQUF1Qjs7SUFDdkIsdUNBQXdCOztJQUN4Qix5Q0FBNEI7Ozs7O0lBRzFCLDhDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcclxuaW1wb3J0IHtBYnN0cmFjdE9iamVjdDNEfSBmcm9tICcuLi9hYnN0cmFjdC1vYmplY3QtM2QnO1xyXG5pbXBvcnQge2FwcGxpZWRDb2xvcn0gZnJvbSAnLi4vLi4vdXRpbCc7XHJcbmltcG9ydCB7UmVuZGVyZXJTZXJ2aWNlfSBmcm9tICcuLi8uLi9yZW5kZXJlci9yZW5kZXJlci5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXRmdC1wb2ludC1saWdodCcsXHJcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IEFic3RyYWN0T2JqZWN0M0QsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBvaW50TGlnaHRDb21wb25lbnQpfV0sXHJcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9pbnRMaWdodENvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0T2JqZWN0M0Q8VEhSRUUuUG9pbnRMaWdodD4ge1xyXG5cclxuICBASW5wdXQoKSBjb2xvciA9IDB4ZmZmZmZmO1xyXG4gIEBJbnB1dCgpIGludGVuc2l0eSA9IDE7XHJcbiAgQElucHV0KCkgZGlzdGFuY2UgPSA1MDA7XHJcbiAgQElucHV0KCkgY2FzdFNoYWRvdyA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByb3RlY3RlZCByZW5kZXJlclNlcnZpY2U6IFJlbmRlcmVyU2VydmljZVxyXG4gICkge1xyXG4gICAgc3VwZXIocmVuZGVyZXJTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBuZXdPYmplY3QzREluc3RhbmNlKCkge1xyXG4gICAgY29uc3QgbGlnaHQgPSBuZXcgVEhSRUUuUG9pbnRMaWdodChhcHBsaWVkQ29sb3IodGhpcy5jb2xvciksIHRoaXMuaW50ZW5zaXR5LCB0aGlzLmRpc3RhbmNlKTtcclxuXHJcbiAgICBpZiAodGhpcy5jYXN0U2hhZG93ID09PSB0cnVlKSB7XHJcbiAgICAgIGxpZ2h0LmNhc3RTaGFkb3cgPSB0aGlzLmNhc3RTaGFkb3c7XHJcbiAgICAgIC8vIFRPRE86IHByb3BzXHJcbiAgICAgIGxpZ2h0LnNoYWRvdy5tYXBTaXplLndpZHRoID0gMTAyNDtcclxuICAgICAgbGlnaHQuc2hhZG93Lm1hcFNpemUuaGVpZ2h0ID0gMTAyNDtcclxuICAgICAgbGlnaHQuc2hhZG93LmNhbWVyYS5uZWFyID0gMC41O1xyXG4gICAgICBsaWdodC5zaGFkb3cuY2FtZXJhLmZhciA9IDUwMDtcclxuICAgICAgbGlnaHQuc2hhZG93LmJpYXMgPSAtMC4wMDE7XHJcbiAgICAgIGxpZ2h0LnNoYWRvdy5yYWRpdXMgPSAxO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBsaWdodDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==