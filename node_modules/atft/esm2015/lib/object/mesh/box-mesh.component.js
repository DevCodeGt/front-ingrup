/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractMesh } from './abstract-mesh-3d';
import { AbstractObject3D } from '../abstract-object-3d';
import { RendererService } from '../../renderer/renderer.service';
export class BoxMeshComponent extends AbstractMesh {
    /**
     * @param {?} rendererService
     */
    constructor(rendererService) {
        super(rendererService);
        this.rendererService = rendererService;
        /**
         * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.
         */
        this.width = 1.0;
        /**
         * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.
         */
        this.height = 1.0;
        /**
         * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.
         */
        this.depth = 1.0;
        /**
         * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.
         */
        this.widthSegments = 1;
        /**
         * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.
         */
        this.heightSegments = 1;
        /**
         * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.
         */
        this.depthSegments = 1;
    }
    /**
     * @protected
     * @return {?}
     */
    newObject3DInstance() {
        // console.log('BoxMeshComponent.newObject3DInstance');
        /** @type {?} */
        const geometry = new THREE.BoxGeometry(this.width, this.height, this.depth, this.widthSegments, this.heightSegments, this.depthSegments);
        /** @type {?} */
        const material = this.getMaterial();
        /** @type {?} */
        const mesh = new THREE.Mesh(geometry, material);
        this.applyShadowProps(mesh);
        return mesh;
    }
}
BoxMeshComponent.decorators = [
    { type: Component, args: [{
                selector: 'atft-box-mesh',
                providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => BoxMeshComponent)) }],
                template: '<ng-content></ng-content>'
            }] }
];
/** @nocollapse */
BoxMeshComponent.ctorParameters = () => [
    { type: RendererService }
];
BoxMeshComponent.propDecorators = {
    width: [{ type: Input }],
    height: [{ type: Input }],
    depth: [{ type: Input }],
    widthSegments: [{ type: Input }],
    heightSegments: [{ type: Input }],
    depthSegments: [{ type: Input }]
};
if (false) {
    /**
     * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.width;
    /**
     * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.height;
    /**
     * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.depth;
    /**
     * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.widthSegments;
    /**
     * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.heightSegments;
    /**
     * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.depthSegments;
    /**
     * @type {?}
     * @protected
     */
    BoxMeshComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LW1lc2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvbWVzaC9ib3gtbWVzaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDaEQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBT2hFLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxZQUFZOzs7O0lBc0NoRCxZQUNZLGVBQWdDO1FBRTFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUZiLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjs7OztRQWpDNUMsVUFBSyxHQUFHLEdBQUcsQ0FBQzs7OztRQU1aLFdBQU0sR0FBRyxHQUFHLENBQUM7Ozs7UUFNYixVQUFLLEdBQUcsR0FBRyxDQUFDOzs7O1FBTVosa0JBQWEsR0FBRyxDQUFDLENBQUM7Ozs7UUFNbEIsbUJBQWMsR0FBRyxDQUFDLENBQUM7Ozs7UUFNbkIsa0JBQWEsR0FBRyxDQUFDLENBQUM7SUFNbEIsQ0FBQzs7Ozs7SUFFUyxtQkFBbUI7OztjQUVyQixRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUN4RSxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQzs7Y0FDeEQsUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUU7O2NBQzdCLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztRQUMvQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7WUF6REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxlQUFlO2dCQUN6QixTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsVUFBVTs7O3dCQUFDLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixFQUFDLEVBQUMsQ0FBQztnQkFDekYsUUFBUSxFQUFFLDJCQUEyQjthQUN0Qzs7OztZQU5PLGVBQWU7OztvQkFZcEIsS0FBSztxQkFNTCxLQUFLO29CQU1MLEtBQUs7NEJBTUwsS0FBSzs2QkFNTCxLQUFLOzRCQU1MLEtBQUs7Ozs7Ozs7SUE5Qk4saUNBQ1k7Ozs7O0lBS1osa0NBQ2E7Ozs7O0lBS2IsaUNBQ1k7Ozs7O0lBS1oseUNBQ2tCOzs7OztJQUtsQiwwQ0FDbUI7Ozs7O0lBS25CLHlDQUNrQjs7Ozs7SUFHaEIsMkNBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGZvcndhcmRSZWYsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQge0Fic3RyYWN0TWVzaH0gZnJvbSAnLi9hYnN0cmFjdC1tZXNoLTNkJztcclxuaW1wb3J0IHtBYnN0cmFjdE9iamVjdDNEfSBmcm9tICcuLi9hYnN0cmFjdC1vYmplY3QtM2QnO1xyXG5pbXBvcnQge1JlbmRlcmVyU2VydmljZX0gZnJvbSAnLi4vLi4vcmVuZGVyZXIvcmVuZGVyZXIuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2F0ZnQtYm94LW1lc2gnLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBBYnN0cmFjdE9iamVjdDNELCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBCb3hNZXNoQ29tcG9uZW50KX1dLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PidcclxufSlcclxuZXhwb3J0IGNsYXNzIEJveE1lc2hDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdE1lc2gge1xyXG5cclxuICAvKipcclxuICAgKiBXaWR0aDsgdGhhdCBpcywgdGhlIGxlbmd0aCBvZiB0aGUgZWRnZXMgcGFyYWxsZWwgdG8gdGhlIFggYXhpcy4gT3B0aW9uYWw7IGRlZmF1bHRzIHRvIDEuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICB3aWR0aCA9IDEuMDtcclxuXHJcbiAgLyoqXHJcbiAgICogSGVpZ2h0OyB0aGF0IGlzLCB0aGUgbGVuZ3RoIG9mIHRoZSBlZGdlcyBwYXJhbGxlbCB0byB0aGUgWSBheGlzLiBPcHRpb25hbDsgZGVmYXVsdHMgdG8gMS5cclxuICAgKi9cclxuICBASW5wdXQoKVxyXG4gIGhlaWdodCA9IDEuMDtcclxuXHJcbiAgLyoqXHJcbiAgICogRGVwdGg7IHRoYXQgaXMsIHRoZSBsZW5ndGggb2YgdGhlIGVkZ2VzIHBhcmFsbGVsIHRvIHRoZSBaIGF4aXMuIE9wdGlvbmFsOyBkZWZhdWx0cyB0byAxLlxyXG4gICAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVwdGggPSAxLjA7XHJcblxyXG4gIC8qKlxyXG4gICAqIE51bWJlciBvZiBzZWdtZW50ZWQgcmVjdGFuZ3VsYXIgZmFjZXMgYWxvbmcgdGhlIHdpZHRoIG9mIHRoZSBzaWRlcy4gT3B0aW9uYWw7IGRlZmF1bHRzIHRvIDEuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICB3aWR0aFNlZ21lbnRzID0gMTtcclxuXHJcbiAgLyoqXHJcbiAgICogTnVtYmVyIG9mIHNlZ21lbnRlZCByZWN0YW5ndWxhciBmYWNlcyBhbG9uZyB0aGUgaGVpZ2h0IG9mIHRoZSBzaWRlcy4gT3B0aW9uYWw7IGRlZmF1bHRzIHRvIDEuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICBoZWlnaHRTZWdtZW50cyA9IDE7XHJcblxyXG4gIC8qKlxyXG4gICAqIE51bWJlciBvZiBzZWdtZW50ZWQgcmVjdGFuZ3VsYXIgZmFjZXMgYWxvbmcgdGhlIGRlcHRoIG9mIHRoZSBzaWRlcy4gT3B0aW9uYWw7IGRlZmF1bHRzIHRvIDEuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICBkZXB0aFNlZ21lbnRzID0gMTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXJTZXJ2aWNlOiBSZW5kZXJlclNlcnZpY2VcclxuICApIHtcclxuICAgIHN1cGVyKHJlbmRlcmVyU2VydmljZSk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbmV3T2JqZWN0M0RJbnN0YW5jZSgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdCb3hNZXNoQ29tcG9uZW50Lm5ld09iamVjdDNESW5zdGFuY2UnKTtcclxuICAgIGNvbnN0IGdlb21ldHJ5ID0gbmV3IFRIUkVFLkJveEdlb21ldHJ5KHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLmRlcHRoLFxyXG4gICAgICB0aGlzLndpZHRoU2VnbWVudHMsIHRoaXMuaGVpZ2h0U2VnbWVudHMsIHRoaXMuZGVwdGhTZWdtZW50cyk7XHJcbiAgICBjb25zdCBtYXRlcmlhbCA9IHRoaXMuZ2V0TWF0ZXJpYWwoKTtcclxuICAgIGNvbnN0IG1lc2ggPSBuZXcgVEhSRUUuTWVzaChnZW9tZXRyeSwgbWF0ZXJpYWwpO1xyXG4gICAgdGhpcy5hcHBseVNoYWRvd1Byb3BzKG1lc2gpO1xyXG4gICAgcmV0dXJuIG1lc2g7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=