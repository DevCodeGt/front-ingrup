/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
import { RendererService } from '../../renderer/renderer.service';
export class GridHelperComponent extends AbstractObject3D {
    /**
     * @param {?} rendererService
     */
    constructor(rendererService) {
        super(rendererService);
        this.rendererService = rendererService;
    }
    /**
     * @protected
     * @return {?}
     */
    newObject3DInstance() {
        // console.log('GridHelperComponent.newObject3DInstance');
        return new THREE.GridHelper(this.size, this.divisions);
    }
}
GridHelperComponent.decorators = [
    { type: Component, args: [{
                selector: 'atft-grid-helper',
                providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => GridHelperComponent)) }],
                template: '<ng-content></ng-content>'
            }] }
];
/** @nocollapse */
GridHelperComponent.ctorParameters = () => [
    { type: RendererService }
];
GridHelperComponent.propDecorators = {
    size: [{ type: Input }],
    divisions: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    GridHelperComponent.prototype.size;
    /** @type {?} */
    GridHelperComponent.prototype.divisions;
    /**
     * @type {?}
     * @protected
     */
    GridHelperComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1oZWxwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvaGVscGVyL2dyaWQtaGVscGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQU9oRSxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsZ0JBQWtDOzs7O0lBS3pFLFlBQ1ksZUFBZ0M7UUFFMUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRmIsb0JBQWUsR0FBZixlQUFlLENBQWlCO0lBRzVDLENBQUM7Ozs7O0lBRVMsbUJBQW1CO1FBQzNCLDBEQUEwRDtRQUMxRCxPQUFPLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsbUJBQW1CLEVBQUMsRUFBRSxDQUFDO2dCQUM5RixRQUFRLEVBQUUsMkJBQTJCO2FBQ3RDOzs7O1lBTk8sZUFBZTs7O21CQVNwQixLQUFLO3dCQUNMLEtBQUs7Ozs7SUFETixtQ0FBc0I7O0lBQ3RCLHdDQUEyQjs7Ozs7SUFHekIsOENBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGZvcndhcmRSZWYsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQge0Fic3RyYWN0T2JqZWN0M0R9IGZyb20gJy4uL2Fic3RyYWN0LW9iamVjdC0zZCc7XHJcbmltcG9ydCB7UmVuZGVyZXJTZXJ2aWNlfSBmcm9tICcuLi8uLi9yZW5kZXJlci9yZW5kZXJlci5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXRmdC1ncmlkLWhlbHBlcicsXHJcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBBYnN0cmFjdE9iamVjdDNELCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBHcmlkSGVscGVyQ29tcG9uZW50KSB9XSxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHcmlkSGVscGVyQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RPYmplY3QzRDxUSFJFRS5BeGVzSGVscGVyPiB7XHJcblxyXG4gIEBJbnB1dCgpIHNpemU6IG51bWJlcjtcclxuICBASW5wdXQoKSBkaXZpc2lvbnM6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXJTZXJ2aWNlOiBSZW5kZXJlclNlcnZpY2VcclxuICApIHtcclxuICAgIHN1cGVyKHJlbmRlcmVyU2VydmljZSk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbmV3T2JqZWN0M0RJbnN0YW5jZSgpOiBUSFJFRS5BeGVzSGVscGVyIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdHcmlkSGVscGVyQ29tcG9uZW50Lm5ld09iamVjdDNESW5zdGFuY2UnKTtcclxuICAgIHJldHVybiBuZXcgVEhSRUUuR3JpZEhlbHBlcih0aGlzLnNpemUsIHRoaXMuZGl2aXNpb25zKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==