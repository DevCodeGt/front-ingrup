/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, Output } from '@angular/core';
import { AbstractObject3D } from '../object/abstract-object-3d';
import { RaycasterService } from './raycaster.service';
/**
 * Only components marked as atft-raycaster-group emit raycaster events.
 * NOTE: All childs are also considered by raycaster (very usefull, for composite components).
 */
export class RaycasterGroupDirective {
    /**
     * @param {?} host
     * @param {?} raycasterService
     */
    constructor(host, raycasterService) {
        this.host = host;
        this.raycasterService = raycasterService;
        this.mouseEnter = new EventEmitter();
        this.mouseExit = new EventEmitter();
        this.mouseDown = new EventEmitter();
        this.onMouseEnter = this.onMouseEnter.bind(this);
        this.onMouseExit = this.onMouseExit.bind(this);
        this.onMouseDown = this.onMouseDown.bind(this);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.raycasterService.addGroup(this.host);
        this.subscribeEvents();
    }
    /**
     * @private
     * @return {?}
     */
    subscribeEvents() {
        /** @type {?} */
        const obj = this.host.getObject();
        obj.addEventListener('mouseEnter', this.onMouseEnter);
        obj.addEventListener('mouseExit', this.onMouseExit);
        obj.addEventListener('mouseDown', this.onMouseDown);
    }
    /**
     * @private
     * @return {?}
     */
    unSubscribeEvents() {
        /** @type {?} */
        const obj = this.host.getObject();
        obj.removeEventListener('mouseEnter', this.onMouseEnter);
        obj.removeEventListener('mouseExit', this.onMouseExit);
        obj.removeEventListener('mouseDown', this.onMouseDown);
    }
    /**
     * @private
     * @return {?}
     */
    onMouseExit() {
        this.mouseExit.emit();
    }
    /**
     * @private
     * @return {?}
     */
    onMouseEnter() {
        this.mouseEnter.emit();
    }
    /**
     * @private
     * @return {?}
     */
    onMouseDown() {
        this.mouseDown.emit();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.unSubscribeEvents();
    }
}
RaycasterGroupDirective.decorators = [
    { type: Directive, args: [{ selector: '[atft-raycaster-group]' },] }
];
/** @nocollapse */
RaycasterGroupDirective.ctorParameters = () => [
    { type: AbstractObject3D },
    { type: RaycasterService }
];
RaycasterGroupDirective.propDecorators = {
    mouseEnter: [{ type: Output }],
    mouseExit: [{ type: Output }],
    mouseDown: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    RaycasterGroupDirective.prototype.mouseEnter;
    /** @type {?} */
    RaycasterGroupDirective.prototype.mouseExit;
    /** @type {?} */
    RaycasterGroupDirective.prototype.mouseDown;
    /**
     * @type {?}
     * @private
     */
    RaycasterGroupDirective.prototype.host;
    /**
     * @type {?}
     * @private
     */
    RaycasterGroupDirective.prototype.raycasterService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmF5Y2FzdGVyLWdyb3VwLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2F0ZnQvIiwic291cmNlcyI6WyJsaWIvcmF5Y2FzdGVyL3JheWNhc3Rlci1ncm91cC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBZ0IsU0FBUyxFQUFFLFlBQVksRUFBYSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFDOUQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0scUJBQXFCLENBQUM7Ozs7O0FBT3JELE1BQU0sT0FBTyx1QkFBdUI7Ozs7O0lBTWxDLFlBQ1UsSUFBMkIsRUFDM0IsZ0JBQWtDO1FBRGxDLFNBQUksR0FBSixJQUFJLENBQXVCO1FBQzNCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFObEMsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDdEMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDckMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFNN0MsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7OztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDekIsQ0FBQzs7Ozs7SUFFTyxlQUFlOztjQUNmLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUNqQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN0RCxHQUFHLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwRCxHQUFHLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN0RCxDQUFDOzs7OztJQUVPLGlCQUFpQjs7Y0FDakIsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1FBQ2pDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3pELEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3ZELEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3pELENBQUM7Ozs7O0lBRU8sV0FBVztRQUNqQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7O0lBRU8sWUFBWTtRQUNsQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRU8sV0FBVztRQUNqQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDM0IsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQyxFQUFDLFFBQVEsRUFBRSx3QkFBd0IsRUFBQzs7OztZQVB2QyxnQkFBZ0I7WUFDaEIsZ0JBQWdCOzs7eUJBU3JCLE1BQU07d0JBQ04sTUFBTTt3QkFDTixNQUFNOzs7O0lBRlAsNkNBQWdEOztJQUNoRCw0Q0FBK0M7O0lBQy9DLDRDQUErQzs7Ozs7SUFHN0MsdUNBQW1DOzs7OztJQUNuQyxtREFBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyVmlld0luaXQsIERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RPYmplY3QzRH0gZnJvbSAnLi4vb2JqZWN0L2Fic3RyYWN0LW9iamVjdC0zZCc7XHJcbmltcG9ydCB7UmF5Y2FzdGVyU2VydmljZX0gZnJvbSAnLi9yYXljYXN0ZXIuc2VydmljZSc7XHJcblxyXG4vKipcclxuICogT25seSBjb21wb25lbnRzIG1hcmtlZCBhcyBhdGZ0LXJheWNhc3Rlci1ncm91cCBlbWl0IHJheWNhc3RlciBldmVudHMuXHJcbiAqIE5PVEU6IEFsbCBjaGlsZHMgYXJlIGFsc28gY29uc2lkZXJlZCBieSByYXljYXN0ZXIgKHZlcnkgdXNlZnVsbCwgZm9yIGNvbXBvc2l0ZSBjb21wb25lbnRzKS5cclxuICovXHJcbkBEaXJlY3RpdmUoe3NlbGVjdG9yOiAnW2F0ZnQtcmF5Y2FzdGVyLWdyb3VwXSd9KVxyXG5leHBvcnQgY2xhc3MgUmF5Y2FzdGVyR3JvdXBEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG5cclxuICBAT3V0cHV0KCkgbW91c2VFbnRlciA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcclxuICBAT3V0cHV0KCkgbW91c2VFeGl0ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xyXG4gIEBPdXRwdXQoKSBtb3VzZURvd24gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBob3N0OiBBYnN0cmFjdE9iamVjdDNEPGFueT4sXHJcbiAgICBwcml2YXRlIHJheWNhc3RlclNlcnZpY2U6IFJheWNhc3RlclNlcnZpY2VcclxuICApIHtcclxuICAgIHRoaXMub25Nb3VzZUVudGVyID0gdGhpcy5vbk1vdXNlRW50ZXIuYmluZCh0aGlzKTtcclxuICAgIHRoaXMub25Nb3VzZUV4aXQgPSB0aGlzLm9uTW91c2VFeGl0LmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLm9uTW91c2VEb3duID0gdGhpcy5vbk1vdXNlRG93bi5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5yYXljYXN0ZXJTZXJ2aWNlLmFkZEdyb3VwKHRoaXMuaG9zdCk7XHJcbiAgICB0aGlzLnN1YnNjcmliZUV2ZW50cygpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdWJzY3JpYmVFdmVudHMoKSB7XHJcbiAgICBjb25zdCBvYmogPSB0aGlzLmhvc3QuZ2V0T2JqZWN0KCk7XHJcbiAgICBvYmouYWRkRXZlbnRMaXN0ZW5lcignbW91c2VFbnRlcicsIHRoaXMub25Nb3VzZUVudGVyKTtcclxuICAgIG9iai5hZGRFdmVudExpc3RlbmVyKCdtb3VzZUV4aXQnLCB0aGlzLm9uTW91c2VFeGl0KTtcclxuICAgIG9iai5hZGRFdmVudExpc3RlbmVyKCdtb3VzZURvd24nLCB0aGlzLm9uTW91c2VEb3duKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgdW5TdWJzY3JpYmVFdmVudHMoKSB7XHJcbiAgICBjb25zdCBvYmogPSB0aGlzLmhvc3QuZ2V0T2JqZWN0KCk7XHJcbiAgICBvYmoucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VFbnRlcicsIHRoaXMub25Nb3VzZUVudGVyKTtcclxuICAgIG9iai5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZUV4aXQnLCB0aGlzLm9uTW91c2VFeGl0KTtcclxuICAgIG9iai5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZURvd24nLCB0aGlzLm9uTW91c2VEb3duKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgb25Nb3VzZUV4aXQoKSB7XHJcbiAgICB0aGlzLm1vdXNlRXhpdC5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uTW91c2VFbnRlcigpIHtcclxuICAgIHRoaXMubW91c2VFbnRlci5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG9uTW91c2VEb3duKCkge1xyXG4gICAgdGhpcy5tb3VzZURvd24uZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICB0aGlzLnVuU3Vic2NyaWJlRXZlbnRzKCk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=