/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { AbstractLazyObject3D } from '../abstract-lazy-object-3d';
/**
 * Helper parent class for model loader.
 *
 * @see ObjLoaderComponent
 * @abstract
 */
var AbstractModelLoader = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractModelLoader, _super);
    function AbstractModelLoader() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(AbstractModelLoader.prototype, "model", {
        /**
         * The current model data source (usually a URI).
         */
        get: /**
         * The current model data source (usually a URI).
         * @return {?}
         */
        function () {
            return this._model;
        },
        /**
         * The model data source (usually a URI).
         * Settings this property only hides the previous model upon successful
         * loading of the new one. This especially means that if the new data source
         * is invalid, the old model will *not* be removed from the scene.
         */
        set: /**
         * The model data source (usually a URI).
         * Settings this property only hides the previous model upon successful
         * loading of the new one. This especially means that if the new data source
         * is invalid, the old model will *not* be removed from the scene.
         * @param {?} newModelUrl
         * @return {?}
         */
        function (newModelUrl) {
            if (this._model !== newModelUrl) {
                this._model = newModelUrl;
                _super.prototype.startLoading.call(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    AbstractModelLoader.propDecorators = {
        model: [{ type: Input }]
    };
    return AbstractModelLoader;
}(AbstractLazyObject3D));
export { AbstractModelLoader };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    AbstractModelLoader.prototype._model;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtbW9kZWwtbG9hZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvbG9hZGVyL2Fic3RyYWN0LW1vZGVsLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sNEJBQTRCLENBQUM7Ozs7Ozs7QUFPaEU7SUFBa0QsK0NBQW9CO0lBQXRFOztJQXlCQSxDQUFDO0lBZkMsc0JBQ1csc0NBQUs7UUFPaEI7O1dBRUc7Ozs7O1FBQ0g7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQztRQW5CRDs7Ozs7V0FLRzs7Ozs7Ozs7O1FBQ0gsVUFDaUIsV0FBbUI7WUFDbEMsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLFdBQVcsRUFBRTtnQkFDL0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUM7Z0JBQzFCLGlCQUFNLFlBQVksV0FBRSxDQUFDO2FBQ3RCO1FBQ0gsQ0FBQzs7O09BQUE7O3dCQU5BLEtBQUs7O0lBZVIsMEJBQUM7Q0FBQSxBQXpCRCxDQUFrRCxvQkFBb0IsR0F5QnJFO1NBekJxQixtQkFBbUI7Ozs7OztJQUV2QyxxQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtBYnN0cmFjdExhenlPYmplY3QzRH0gZnJvbSAnLi4vYWJzdHJhY3QtbGF6eS1vYmplY3QtM2QnO1xyXG5cclxuLyoqXHJcbiAqIEhlbHBlciBwYXJlbnQgY2xhc3MgZm9yIG1vZGVsIGxvYWRlci5cclxuICpcclxuICogQHNlZSBPYmpMb2FkZXJDb21wb25lbnRcclxuICovXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdE1vZGVsTG9hZGVyIGV4dGVuZHMgQWJzdHJhY3RMYXp5T2JqZWN0M0Qge1xyXG5cclxuICBwcm90ZWN0ZWQgX21vZGVsOiBzdHJpbmc7XHJcblxyXG4gIC8qKlxyXG4gICAqIFRoZSBtb2RlbCBkYXRhIHNvdXJjZSAodXN1YWxseSBhIFVSSSkuXHJcbiAgICogU2V0dGluZ3MgdGhpcyBwcm9wZXJ0eSBvbmx5IGhpZGVzIHRoZSBwcmV2aW91cyBtb2RlbCB1cG9uIHN1Y2Nlc3NmdWxcclxuICAgKiBsb2FkaW5nIG9mIHRoZSBuZXcgb25lLiBUaGlzIGVzcGVjaWFsbHkgbWVhbnMgdGhhdCBpZiB0aGUgbmV3IGRhdGEgc291cmNlXHJcbiAgICogaXMgaW52YWxpZCwgdGhlIG9sZCBtb2RlbCB3aWxsICpub3QqIGJlIHJlbW92ZWQgZnJvbSB0aGUgc2NlbmUuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgc2V0IG1vZGVsKG5ld01vZGVsVXJsOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLl9tb2RlbCAhPT0gbmV3TW9kZWxVcmwpIHtcclxuICAgICAgdGhpcy5fbW9kZWwgPSBuZXdNb2RlbFVybDtcclxuICAgICAgc3VwZXIuc3RhcnRMb2FkaW5nKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUaGUgY3VycmVudCBtb2RlbCBkYXRhIHNvdXJjZSAodXN1YWxseSBhIFVSSSkuXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBtb2RlbCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9tb2RlbDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==