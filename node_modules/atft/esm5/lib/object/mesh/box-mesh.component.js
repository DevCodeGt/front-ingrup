/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractMesh } from './abstract-mesh-3d';
import { AbstractObject3D } from '../abstract-object-3d';
import { RendererService } from '../../renderer/renderer.service';
var BoxMeshComponent = /** @class */ (function (_super) {
    tslib_1.__extends(BoxMeshComponent, _super);
    function BoxMeshComponent(rendererService) {
        var _this = _super.call(this, rendererService) || this;
        _this.rendererService = rendererService;
        /**
         * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.
         */
        _this.width = 1.0;
        /**
         * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.
         */
        _this.height = 1.0;
        /**
         * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.
         */
        _this.depth = 1.0;
        /**
         * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.
         */
        _this.widthSegments = 1;
        /**
         * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.
         */
        _this.heightSegments = 1;
        /**
         * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.
         */
        _this.depthSegments = 1;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    BoxMeshComponent.prototype.newObject3DInstance = /**
     * @protected
     * @return {?}
     */
    function () {
        // console.log('BoxMeshComponent.newObject3DInstance');
        /** @type {?} */
        var geometry = new THREE.BoxGeometry(this.width, this.height, this.depth, this.widthSegments, this.heightSegments, this.depthSegments);
        /** @type {?} */
        var material = this.getMaterial();
        /** @type {?} */
        var mesh = new THREE.Mesh(geometry, material);
        this.applyShadowProps(mesh);
        return mesh;
    };
    BoxMeshComponent.decorators = [
        { type: Component, args: [{
                    selector: 'atft-box-mesh',
                    providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return BoxMeshComponent; })) }],
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    BoxMeshComponent.ctorParameters = function () { return [
        { type: RendererService }
    ]; };
    BoxMeshComponent.propDecorators = {
        width: [{ type: Input }],
        height: [{ type: Input }],
        depth: [{ type: Input }],
        widthSegments: [{ type: Input }],
        heightSegments: [{ type: Input }],
        depthSegments: [{ type: Input }]
    };
    return BoxMeshComponent;
}(AbstractMesh));
export { BoxMeshComponent };
if (false) {
    /**
     * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.width;
    /**
     * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.height;
    /**
     * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.depth;
    /**
     * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.widthSegments;
    /**
     * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.heightSegments;
    /**
     * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.
     * @type {?}
     */
    BoxMeshComponent.prototype.depthSegments;
    /**
     * @type {?}
     * @protected
     */
    BoxMeshComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LW1lc2guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvbWVzaC9ib3gtbWVzaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUVoRTtJQUtzQyw0Q0FBWTtJQXNDaEQsMEJBQ1ksZUFBZ0M7UUFENUMsWUFHRSxrQkFBTSxlQUFlLENBQUMsU0FDdkI7UUFIVyxxQkFBZSxHQUFmLGVBQWUsQ0FBaUI7Ozs7UUFqQzVDLFdBQUssR0FBRyxHQUFHLENBQUM7Ozs7UUFNWixZQUFNLEdBQUcsR0FBRyxDQUFDOzs7O1FBTWIsV0FBSyxHQUFHLEdBQUcsQ0FBQzs7OztRQU1aLG1CQUFhLEdBQUcsQ0FBQyxDQUFDOzs7O1FBTWxCLG9CQUFjLEdBQUcsQ0FBQyxDQUFDOzs7O1FBTW5CLG1CQUFhLEdBQUcsQ0FBQyxDQUFDOztJQU1sQixDQUFDOzs7OztJQUVTLDhDQUFtQjs7OztJQUE3Qjs7O1lBRVEsUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFDeEUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUM7O1lBQ3hELFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFOztZQUM3QixJQUFJLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7UUFDL0MsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Z0JBekRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEsZ0JBQWdCLEVBQWhCLENBQWdCLEVBQUMsRUFBQyxDQUFDO29CQUN6RixRQUFRLEVBQUUsMkJBQTJCO2lCQUN0Qzs7OztnQkFOTyxlQUFlOzs7d0JBWXBCLEtBQUs7eUJBTUwsS0FBSzt3QkFNTCxLQUFLO2dDQU1MLEtBQUs7aUNBTUwsS0FBSztnQ0FNTCxLQUFLOztJQW1CUix1QkFBQztDQUFBLEFBM0RELENBS3NDLFlBQVksR0FzRGpEO1NBdERZLGdCQUFnQjs7Ozs7O0lBSzNCLGlDQUNZOzs7OztJQUtaLGtDQUNhOzs7OztJQUtiLGlDQUNZOzs7OztJQUtaLHlDQUNrQjs7Ozs7SUFLbEIsMENBQ21COzs7OztJQUtuQix5Q0FDa0I7Ozs7O0lBR2hCLDJDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcclxuaW1wb3J0IHtBYnN0cmFjdE1lc2h9IGZyb20gJy4vYWJzdHJhY3QtbWVzaC0zZCc7XHJcbmltcG9ydCB7QWJzdHJhY3RPYmplY3QzRH0gZnJvbSAnLi4vYWJzdHJhY3Qtb2JqZWN0LTNkJztcclxuaW1wb3J0IHtSZW5kZXJlclNlcnZpY2V9IGZyb20gJy4uLy4uL3JlbmRlcmVyL3JlbmRlcmVyLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhdGZ0LWJveC1tZXNoJyxcclxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogQWJzdHJhY3RPYmplY3QzRCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gQm94TWVzaENvbXBvbmVudCl9XSxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCb3hNZXNoQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RNZXNoIHtcclxuXHJcbiAgLyoqXHJcbiAgICogV2lkdGg7IHRoYXQgaXMsIHRoZSBsZW5ndGggb2YgdGhlIGVkZ2VzIHBhcmFsbGVsIHRvIHRoZSBYIGF4aXMuIE9wdGlvbmFsOyBkZWZhdWx0cyB0byAxLlxyXG4gICAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgd2lkdGggPSAxLjA7XHJcblxyXG4gIC8qKlxyXG4gICAqIEhlaWdodDsgdGhhdCBpcywgdGhlIGxlbmd0aCBvZiB0aGUgZWRnZXMgcGFyYWxsZWwgdG8gdGhlIFkgYXhpcy4gT3B0aW9uYWw7IGRlZmF1bHRzIHRvIDEuXHJcbiAgICovXHJcbiAgQElucHV0KClcclxuICBoZWlnaHQgPSAxLjA7XHJcblxyXG4gIC8qKlxyXG4gICAqIERlcHRoOyB0aGF0IGlzLCB0aGUgbGVuZ3RoIG9mIHRoZSBlZGdlcyBwYXJhbGxlbCB0byB0aGUgWiBheGlzLiBPcHRpb25hbDsgZGVmYXVsdHMgdG8gMS5cclxuICAgKi9cclxuICBASW5wdXQoKVxyXG4gIGRlcHRoID0gMS4wO1xyXG5cclxuICAvKipcclxuICAgKiBOdW1iZXIgb2Ygc2VnbWVudGVkIHJlY3Rhbmd1bGFyIGZhY2VzIGFsb25nIHRoZSB3aWR0aCBvZiB0aGUgc2lkZXMuIE9wdGlvbmFsOyBkZWZhdWx0cyB0byAxLlxyXG4gICAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgd2lkdGhTZWdtZW50cyA9IDE7XHJcblxyXG4gIC8qKlxyXG4gICAqIE51bWJlciBvZiBzZWdtZW50ZWQgcmVjdGFuZ3VsYXIgZmFjZXMgYWxvbmcgdGhlIGhlaWdodCBvZiB0aGUgc2lkZXMuIE9wdGlvbmFsOyBkZWZhdWx0cyB0byAxLlxyXG4gICAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgaGVpZ2h0U2VnbWVudHMgPSAxO1xyXG5cclxuICAvKipcclxuICAgKiBOdW1iZXIgb2Ygc2VnbWVudGVkIHJlY3Rhbmd1bGFyIGZhY2VzIGFsb25nIHRoZSBkZXB0aCBvZiB0aGUgc2lkZXMuIE9wdGlvbmFsOyBkZWZhdWx0cyB0byAxLlxyXG4gICAqL1xyXG4gIEBJbnB1dCgpXHJcbiAgZGVwdGhTZWdtZW50cyA9IDE7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyU2VydmljZTogUmVuZGVyZXJTZXJ2aWNlXHJcbiAgKSB7XHJcbiAgICBzdXBlcihyZW5kZXJlclNlcnZpY2UpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG5ld09iamVjdDNESW5zdGFuY2UoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZygnQm94TWVzaENvbXBvbmVudC5uZXdPYmplY3QzREluc3RhbmNlJyk7XHJcbiAgICBjb25zdCBnZW9tZXRyeSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeSh0aGlzLndpZHRoLCB0aGlzLmhlaWdodCwgdGhpcy5kZXB0aCxcclxuICAgICAgdGhpcy53aWR0aFNlZ21lbnRzLCB0aGlzLmhlaWdodFNlZ21lbnRzLCB0aGlzLmRlcHRoU2VnbWVudHMpO1xyXG4gICAgY29uc3QgbWF0ZXJpYWwgPSB0aGlzLmdldE1hdGVyaWFsKCk7XHJcbiAgICBjb25zdCBtZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTtcclxuICAgIHRoaXMuYXBwbHlTaGFkb3dQcm9wcyhtZXNoKTtcclxuICAgIHJldHVybiBtZXNoO1xyXG4gIH1cclxuXHJcbn1cclxuIl19