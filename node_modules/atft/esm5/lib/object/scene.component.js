/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from './abstract-object-3d';
import { appliedColor } from '../util/applied-color';
import { RendererService } from '../renderer/renderer.service';
var SceneComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SceneComponent, _super);
    function SceneComponent(rendererService) {
        var _this = _super.call(this, rendererService) || this;
        _this.rendererService = rendererService;
        _this.background = 0xffffff;
        _this.fog = false;
        _this.fogColor = 0xa0a0a0;
        _this.fogNear = 10;
        _this.fogFar = 500;
        // TODO: directive?
        rendererService.setScene(_this);
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    SceneComponent.prototype.newObject3DInstance = /**
     * @protected
     * @return {?}
     */
    function () {
        /** @type {?} */
        var scene = new THREE.Scene();
        scene.background = new THREE.Color(appliedColor(this.background));
        if (this.fog === true) {
            scene.fog = new THREE.Fog(appliedColor(this.fogColor), this.fogNear, this.fogFar);
        }
        return scene;
    };
    SceneComponent.decorators = [
        { type: Component, args: [{
                    selector: 'atft-scene',
                    providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return SceneComponent; })) }],
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    SceneComponent.ctorParameters = function () { return [
        { type: RendererService }
    ]; };
    SceneComponent.propDecorators = {
        background: [{ type: Input }],
        fog: [{ type: Input }],
        fogColor: [{ type: Input }],
        fogNear: [{ type: Input }],
        fogFar: [{ type: Input }]
    };
    return SceneComponent;
}(AbstractObject3D));
export { SceneComponent };
if (false) {
    /** @type {?} */
    SceneComponent.prototype.background;
    /** @type {?} */
    SceneComponent.prototype.fog;
    /** @type {?} */
    SceneComponent.prototype.fogColor;
    /** @type {?} */
    SceneComponent.prototype.fogNear;
    /** @type {?} */
    SceneComponent.prototype.fogFar;
    /**
     * @type {?}
     * @protected
     */
    SceneComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NlbmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3Qvc2NlbmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFFN0Q7SUFLb0MsMENBQTZCO0lBUS9ELHdCQUNZLGVBQWdDO1FBRDVDLFlBR0Usa0JBQU0sZUFBZSxDQUFDLFNBR3ZCO1FBTFcscUJBQWUsR0FBZixlQUFlLENBQWlCO1FBUG5DLGdCQUFVLEdBQUcsUUFBUSxDQUFDO1FBQ3RCLFNBQUcsR0FBRyxLQUFLLENBQUM7UUFDWixjQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3BCLGFBQU8sR0FBRyxFQUFFLENBQUM7UUFDYixZQUFNLEdBQUcsR0FBRyxDQUFDO1FBTXBCLG1CQUFtQjtRQUNuQixlQUFlLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxDQUFDOztJQUNqQyxDQUFDOzs7OztJQUVTLDRDQUFtQjs7OztJQUE3Qjs7WUFDUSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxFQUFFO1FBQy9CLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ3JCLEtBQUssQ0FBQyxHQUFHLEdBQUcsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDbkY7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O2dCQTVCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLGNBQWMsRUFBZCxDQUFjLEVBQUMsRUFBQyxDQUFDO29CQUN2RixRQUFRLEVBQUUsMkJBQTJCO2lCQUN0Qzs7OztnQkFOTyxlQUFlOzs7NkJBU3BCLEtBQUs7c0JBQ0wsS0FBSzsyQkFDTCxLQUFLOzBCQUNMLEtBQUs7eUJBQ0wsS0FBSzs7SUFtQlIscUJBQUM7Q0FBQSxBQTlCRCxDQUtvQyxnQkFBZ0IsR0F5Qm5EO1NBekJZLGNBQWM7OztJQUV6QixvQ0FBK0I7O0lBQy9CLDZCQUFxQjs7SUFDckIsa0NBQTZCOztJQUM3QixpQ0FBc0I7O0lBQ3RCLGdDQUFzQjs7Ozs7SUFHcEIseUNBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGZvcndhcmRSZWYsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQge0Fic3RyYWN0T2JqZWN0M0R9IGZyb20gJy4vYWJzdHJhY3Qtb2JqZWN0LTNkJztcclxuaW1wb3J0IHthcHBsaWVkQ29sb3J9IGZyb20gJy4uL3V0aWwvYXBwbGllZC1jb2xvcic7XHJcbmltcG9ydCB7UmVuZGVyZXJTZXJ2aWNlfSBmcm9tICcuLi9yZW5kZXJlci9yZW5kZXJlci5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXRmdC1zY2VuZScsXHJcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IEFic3RyYWN0T2JqZWN0M0QsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFNjZW5lQ29tcG9uZW50KX1dLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PidcclxufSlcclxuZXhwb3J0IGNsYXNzIFNjZW5lQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RPYmplY3QzRDxUSFJFRS5TY2VuZT4ge1xyXG5cclxuICBASW5wdXQoKSBiYWNrZ3JvdW5kID0gMHhmZmZmZmY7XHJcbiAgQElucHV0KCkgZm9nID0gZmFsc2U7XHJcbiAgQElucHV0KCkgZm9nQ29sb3IgPSAweGEwYTBhMDtcclxuICBASW5wdXQoKSBmb2dOZWFyID0gMTA7XHJcbiAgQElucHV0KCkgZm9nRmFyID0gNTAwO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByb3RlY3RlZCByZW5kZXJlclNlcnZpY2U6IFJlbmRlcmVyU2VydmljZVxyXG4gICkge1xyXG4gICAgc3VwZXIocmVuZGVyZXJTZXJ2aWNlKTtcclxuICAgIC8vIFRPRE86IGRpcmVjdGl2ZT9cclxuICAgIHJlbmRlcmVyU2VydmljZS5zZXRTY2VuZSh0aGlzKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBuZXdPYmplY3QzREluc3RhbmNlKCk6IFRIUkVFLlNjZW5lIHtcclxuICAgIGNvbnN0IHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XHJcbiAgICBzY2VuZS5iYWNrZ3JvdW5kID0gbmV3IFRIUkVFLkNvbG9yKGFwcGxpZWRDb2xvcih0aGlzLmJhY2tncm91bmQpKTtcclxuICAgIGlmICh0aGlzLmZvZyA9PT0gdHJ1ZSkge1xyXG4gICAgICBzY2VuZS5mb2cgPSBuZXcgVEhSRUUuRm9nKGFwcGxpZWRDb2xvcih0aGlzLmZvZ0NvbG9yKSwgdGhpcy5mb2dOZWFyLCB0aGlzLmZvZ0Zhcik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2NlbmU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=