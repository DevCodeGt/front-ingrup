/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
import { appliedColor } from '../../util/applied-color';
import { RendererService } from '../../renderer/renderer.service';
var HemisphereLightComponent = /** @class */ (function (_super) {
    tslib_1.__extends(HemisphereLightComponent, _super);
    function HemisphereLightComponent(rendererService) {
        var _this = _super.call(this, rendererService) || this;
        _this.rendererService = rendererService;
        _this.skyColor = 0xffffff;
        _this.groundColor = 0x444444;
        _this.intensity = 1;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    HemisphereLightComponent.prototype.newObject3DInstance = /**
     * @protected
     * @return {?}
     */
    function () {
        /** @type {?} */
        var light = new THREE.HemisphereLight(appliedColor(this.skyColor), appliedColor(this.groundColor), appliedColor(this.intensity));
        return light;
    };
    HemisphereLightComponent.decorators = [
        { type: Component, args: [{
                    selector: 'atft-hemisphere-light',
                    providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return HemisphereLightComponent; })) }],
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    HemisphereLightComponent.ctorParameters = function () { return [
        { type: RendererService }
    ]; };
    HemisphereLightComponent.propDecorators = {
        skyColor: [{ type: Input }],
        groundColor: [{ type: Input }],
        intensity: [{ type: Input }]
    };
    return HemisphereLightComponent;
}(AbstractObject3D));
export { HemisphereLightComponent };
if (false) {
    /** @type {?} */
    HemisphereLightComponent.prototype.skyColor;
    /** @type {?} */
    HemisphereLightComponent.prototype.groundColor;
    /** @type {?} */
    HemisphereLightComponent.prototype.intensity;
    /**
     * @type {?}
     * @protected
     */
    HemisphereLightComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVtaXNwaGVyZS1saWdodC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hdGZ0LyIsInNvdXJjZXMiOlsibGliL29iamVjdC9saWdodC9oZW1pc3BoZXJlLWxpZ2h0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdEQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBRWhFO0lBSzhDLG9EQUF1QztJQU1uRixrQ0FDWSxlQUFnQztRQUQ1QyxZQUdFLGtCQUFNLGVBQWUsQ0FBQyxTQUN2QjtRQUhXLHFCQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUxuQyxjQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3BCLGlCQUFXLEdBQUcsUUFBUSxDQUFDO1FBQ3ZCLGVBQVMsR0FBRyxDQUFDLENBQUM7O0lBTXZCLENBQUM7Ozs7O0lBRVMsc0RBQW1COzs7O0lBQTdCOztZQUVRLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxlQUFlLENBQ3JDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQzNCLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQzlCLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQzdCO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOztnQkExQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxVQUFVOzs7NEJBQUMsY0FBTSxPQUFBLHdCQUF3QixFQUF4QixDQUF3QixFQUFDLEVBQUUsQ0FBQztvQkFDbkcsUUFBUSxFQUFFLDJCQUEyQjtpQkFDdEM7Ozs7Z0JBTk8sZUFBZTs7OzJCQVNwQixLQUFLOzhCQUNMLEtBQUs7NEJBQ0wsS0FBSzs7SUFtQlIsK0JBQUM7Q0FBQSxBQTVCRCxDQUs4QyxnQkFBZ0IsR0F1QjdEO1NBdkJZLHdCQUF3Qjs7O0lBRW5DLDRDQUE2Qjs7SUFDN0IsK0NBQWdDOztJQUNoQyw2Q0FBdUI7Ozs7O0lBR3JCLG1EQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcclxuaW1wb3J0IHtBYnN0cmFjdE9iamVjdDNEfSBmcm9tICcuLi9hYnN0cmFjdC1vYmplY3QtM2QnO1xyXG5pbXBvcnQge2FwcGxpZWRDb2xvcn0gZnJvbSAnLi4vLi4vdXRpbC9hcHBsaWVkLWNvbG9yJztcclxuaW1wb3J0IHtSZW5kZXJlclNlcnZpY2V9IGZyb20gJy4uLy4uL3JlbmRlcmVyL3JlbmRlcmVyLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhdGZ0LWhlbWlzcGhlcmUtbGlnaHQnLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogQWJzdHJhY3RPYmplY3QzRCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gSGVtaXNwaGVyZUxpZ2h0Q29tcG9uZW50KSB9XSxcclxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBIZW1pc3BoZXJlTGlnaHRDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdE9iamVjdDNEPFRIUkVFLkhlbWlzcGhlcmVMaWdodD4ge1xyXG5cclxuICBASW5wdXQoKSBza3lDb2xvciA9IDB4ZmZmZmZmO1xyXG4gIEBJbnB1dCgpIGdyb3VuZENvbG9yID0gMHg0NDQ0NDQ7XHJcbiAgQElucHV0KCkgaW50ZW5zaXR5ID0gMTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXJTZXJ2aWNlOiBSZW5kZXJlclNlcnZpY2VcclxuICApIHtcclxuICAgIHN1cGVyKHJlbmRlcmVyU2VydmljZSk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbmV3T2JqZWN0M0RJbnN0YW5jZSgpIHtcclxuXHJcbiAgICBjb25zdCBsaWdodCA9IG5ldyBUSFJFRS5IZW1pc3BoZXJlTGlnaHQoXHJcbiAgICAgIGFwcGxpZWRDb2xvcih0aGlzLnNreUNvbG9yKSxcclxuICAgICAgYXBwbGllZENvbG9yKHRoaXMuZ3JvdW5kQ29sb3IpLFxyXG4gICAgICBhcHBsaWVkQ29sb3IodGhpcy5pbnRlbnNpdHkpXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiBsaWdodDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==