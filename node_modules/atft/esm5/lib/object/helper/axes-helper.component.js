/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef, Input } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
import { RendererService } from '../../renderer/renderer.service';
var AxesHelperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(AxesHelperComponent, _super);
    function AxesHelperComponent(rendererService) {
        var _this = _super.call(this, rendererService) || this;
        _this.rendererService = rendererService;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    AxesHelperComponent.prototype.newObject3DInstance = /**
     * @protected
     * @return {?}
     */
    function () {
        // console.log('AxesHelperComponent.newObject3DInstance');
        return new THREE.AxesHelper(this.size);
    };
    AxesHelperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'atft-axes-helper',
                    providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return AxesHelperComponent; })) }],
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    AxesHelperComponent.ctorParameters = function () { return [
        { type: RendererService }
    ]; };
    AxesHelperComponent.propDecorators = {
        size: [{ type: Input }]
    };
    return AxesHelperComponent;
}(AbstractObject3D));
export { AxesHelperComponent };
if (false) {
    /** @type {?} */
    AxesHelperComponent.prototype.size;
    /**
     * @type {?}
     * @protected
     */
    AxesHelperComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXhlcy1oZWxwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvaGVscGVyL2F4ZXMtaGVscGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFFaEU7SUFLeUMsK0NBQWtDO0lBSXpFLDZCQUNZLGVBQWdDO1FBRDVDLFlBR0Usa0JBQU0sZUFBZSxDQUFDLFNBQ3ZCO1FBSFcscUJBQWUsR0FBZixlQUFlLENBQWlCOztJQUc1QyxDQUFDOzs7OztJQUVTLGlEQUFtQjs7OztJQUE3QjtRQUNFLDBEQUEwRDtRQUMxRCxPQUFPLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Z0JBbEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxtQkFBbUIsRUFBbkIsQ0FBbUIsRUFBQyxFQUFFLENBQUM7b0JBQzlGLFFBQVEsRUFBRSwyQkFBMkI7aUJBQ3RDOzs7O2dCQU5PLGVBQWU7Ozt1QkFTcEIsS0FBSzs7SUFjUiwwQkFBQztDQUFBLEFBckJELENBS3lDLGdCQUFnQixHQWdCeEQ7U0FoQlksbUJBQW1COzs7SUFFOUIsbUNBQXNCOzs7OztJQUdwQiw4Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7XHJcbmltcG9ydCB7QWJzdHJhY3RPYmplY3QzRH0gZnJvbSAnLi4vYWJzdHJhY3Qtb2JqZWN0LTNkJztcclxuaW1wb3J0IHtSZW5kZXJlclNlcnZpY2V9IGZyb20gJy4uLy4uL3JlbmRlcmVyL3JlbmRlcmVyLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhdGZ0LWF4ZXMtaGVscGVyJyxcclxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IEFic3RyYWN0T2JqZWN0M0QsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEF4ZXNIZWxwZXJDb21wb25lbnQpIH1dLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PidcclxufSlcclxuZXhwb3J0IGNsYXNzIEF4ZXNIZWxwZXJDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdE9iamVjdDNEPFRIUkVFLkF4ZXNIZWxwZXI+IHtcclxuXHJcbiAgQElucHV0KCkgc2l6ZTogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByb3RlY3RlZCByZW5kZXJlclNlcnZpY2U6IFJlbmRlcmVyU2VydmljZVxyXG4gICkge1xyXG4gICAgc3VwZXIocmVuZGVyZXJTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBuZXdPYmplY3QzREluc3RhbmNlKCk6IFRIUkVFLkF4ZXNIZWxwZXIge1xyXG4gICAgLy8gY29uc29sZS5sb2coJ0F4ZXNIZWxwZXJDb21wb25lbnQubmV3T2JqZWN0M0RJbnN0YW5jZScpO1xyXG4gICAgcmV0dXJuIG5ldyBUSFJFRS5BeGVzSGVscGVyKHRoaXMuc2l6ZSk7XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuIl19