/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef } from '@angular/core';
import * as THREE from 'three';
import { AbstractObject3D } from '../abstract-object-3d';
import { RendererService } from '../../renderer/renderer.service';
var EmptyComponent = /** @class */ (function (_super) {
    tslib_1.__extends(EmptyComponent, _super);
    function EmptyComponent(rendererService) {
        var _this = _super.call(this, rendererService) || this;
        _this.rendererService = rendererService;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    EmptyComponent.prototype.newObject3DInstance = /**
     * @protected
     * @return {?}
     */
    function () {
        return new THREE.Object3D();
    };
    EmptyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'atft-empty',
                    providers: [{ provide: AbstractObject3D, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return EmptyComponent; })) }],
                    template: '<ng-content></ng-content>'
                }] }
    ];
    /** @nocollapse */
    EmptyComponent.ctorParameters = function () { return [
        { type: RendererService }
    ]; };
    return EmptyComponent;
}(AbstractObject3D));
export { EmptyComponent };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    EmptyComponent.prototype.rendererService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYXRmdC8iLCJzb3VyY2VzIjpbImxpYi9vYmplY3QvaGVscGVyL2VtcHR5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBZ0IsU0FBUyxFQUFFLFVBQVUsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFFaEU7SUFLb0MsMENBQWdDO0lBRWxFLHdCQUNZLGVBQWdDO1FBRDVDLFlBR0Usa0JBQU0sZUFBZSxDQUFDLFNBQ3ZCO1FBSFcscUJBQWUsR0FBZixlQUFlLENBQWlCOztJQUc1QyxDQUFDOzs7OztJQUVTLDRDQUFtQjs7OztJQUE3QjtRQUNFLE9BQU8sSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDOUIsQ0FBQzs7Z0JBZkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLEVBQUUsVUFBVTs7OzRCQUFDLGNBQU0sT0FBQSxjQUFjLEVBQWQsQ0FBYyxFQUFDLEVBQUUsQ0FBQztvQkFDekYsUUFBUSxFQUFFLDJCQUEyQjtpQkFDdEM7Ozs7Z0JBTk8sZUFBZTs7SUFtQnZCLHFCQUFDO0NBQUEsQUFqQkQsQ0FLb0MsZ0JBQWdCLEdBWW5EO1NBWlksY0FBYzs7Ozs7O0lBR3ZCLHlDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcclxuaW1wb3J0IHtBYnN0cmFjdE9iamVjdDNEfSBmcm9tICcuLi9hYnN0cmFjdC1vYmplY3QtM2QnO1xyXG5pbXBvcnQge1JlbmRlcmVyU2VydmljZX0gZnJvbSAnLi4vLi4vcmVuZGVyZXIvcmVuZGVyZXIuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2F0ZnQtZW1wdHknLFxyXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogQWJzdHJhY3RPYmplY3QzRCwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRW1wdHlDb21wb25lbnQpIH1dLFxyXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PidcclxufSlcclxuZXhwb3J0IGNsYXNzIEVtcHR5Q29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RPYmplY3QzRDxUSFJFRS5PYmplY3QzRD4gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXJTZXJ2aWNlOiBSZW5kZXJlclNlcnZpY2VcclxuICApIHtcclxuICAgIHN1cGVyKHJlbmRlcmVyU2VydmljZSk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbmV3T2JqZWN0M0RJbnN0YW5jZSgpOiBUSFJFRS5PYmplY3QzRCB7XHJcbiAgICByZXR1cm4gbmV3IFRIUkVFLk9iamVjdDNEKCk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=